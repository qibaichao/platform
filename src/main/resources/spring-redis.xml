<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd"
>

    <!-- 引入属性文件 -->
    <context:property-placeholder location="classpath:redis.properties"/>
    <!-- jedis池设置 -->
    <bean name="poolConfig" class="redis.clients.jedis.JedisPoolConfig">

        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${redis.maxIdle}"/>

        <!--可用连接实例的最大数目，默认值为8;
            如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。-->
        <property name="maxTotal" value="${redis.maxActive}"/>

        <!--等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException；-->
        <property name="maxWaitMillis" value="${redis.maxWait}"/>

        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>

    </bean>

    <!--池bean-->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool" lazy-init="false">
        <constructor-arg index="0" ref="poolConfig" />
        <constructor-arg index="1" value="${redis.host}"/>
        <constructor-arg index="2" value="${redis.port}"/>
        <constructor-arg index="3" value="${redis.timeout}" />
        <!--<constructor-arg index="4" value="${redis.pass}" />-->
        <!--database,默认0-->
        <!--<constructor-arg index="5" value="${redis.database}" />-->
    </bean>

</beans>